on: push

name: Build and Test

jobs:
  build:
    name: Build OpenSALT
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/marketplace/actions/docker-layer-caching
      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      - name: Pull images
        run: |
          cp -f .env.test .env
          docker-compose pull
      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - name: Cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: opensalt-docker-cache-{hash}
          restore_keys: |
            opensalt-docker-cache-

      - name: Build the images
        run: BUILD_NUMBER=${GITHUB_RUN_NUMBER} make docker-build

      - name: Bring up the stack
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d
          docker-compose exec php dockerize -timeout 60s -wait tcp://db:3306 && sleep 5

      - name: Initialize db
        run: |
          ./core/bin/console --env=prod doctrine:migrations:migrate -q --no-interaction
          ./core/bin/console --env=prod import:generic-csv tests/_data/test_items.csv

      - name: Run tests
        run: ./core/bin/run-tests ${RUN_TEST_ARGS:-"--steps -x duplicate -x skip -x skip-firefox -x 0117-0708 -x 0108-0801 -x 1013-1444 -x change-notification"}

      #- name: Push if passing
      #  run: ...

      - name: Bring down the stack
        if: ${{ always() }}
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.test.yml down -v
